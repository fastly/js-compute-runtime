name: 'Set up a CentOS 6 container to build releases in'
description: 'Set up a CentOS 6 container to build releases in'

runs:
  using: "composite"
  steps:
    - if: runner.os == 'macOS'
      shell: bash
      run: |
        # On OSX all we need to do is configure our deployment target as old as
        # possible. For now 10.9 is the limit.
        cat >> $GITHUB_ENV <<EOF
        MACOSX_DEPLOYMENT_TARGET=10.9
        python=python3
        EOF
    - if: runner.os == 'Windows'
      shell: bash
      run: |
        # On Windows we build against the static CRT to reduce dll dependencies
        cat >> $GITHUB_ENV <<EOF
        RUSTFLAGS=-Ctarget-feature=+crt-static
        python=python
        EOF
    - if: runner.os == 'Linux'
      shell: bash
      run: |
        # ... and on Linux we do fancy things with containers. We'll spawn an old
        # CentOS container in the background with a super old glibc, and then we'll run
        # commands in there with the `$CENTOS` env var.
        docker build -t binary-compatible-builds $GITHUB_ACTION_PATH/docker

        # FIXME(rust-lang/rust#80703) LD_LIBRARY_PATH shouldn't be necessary
        docker run -di --name centos -v $PWD:$PWD -v $(rustc --print sysroot):/rust:ro \
          --env LD_LIBRARY_PATH=/rust/lib \
          --env PATH="/opt/rh/devtoolset-8/root/usr/bin:$PATH:/rust/bin" \
          binary-compatible-builds

        cat >> $GITHUB_ENV <<EOF
        CENTOS=$GITHUB_ACTION_PATH/run-linux
        python=python3
        EOF
