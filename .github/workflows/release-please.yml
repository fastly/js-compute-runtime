on:
  push:
    branches:
      - main

name: release-please
jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      pr: ${{ steps.release.outputs.pr }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: "@fastly/js-compute"
          changelog-path: "CHANGELOG.md"
          bump-minor-pre-major: true
          bump-patch-for-minor-pre-major: true
          draft: false
          prerelease: false
          token: ${{ secrets.JS_COMPUTE_RUNTIME_GITHUB_TOKEN }}


  update-lock-and-docs:
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.pr && !needs.release.outputs.releases_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          ref: release-please--branches--main--components--js-compute
          fetch-depth: 2
          token: ${{ secrets.JS_COMPUTE_RUNTIME_GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Update yarn lock
        run: yarn install --mode=update-lockfile

      - name: Update Docs
        run: yarn docs

      - name: Update Docs App fastly.toml for local development
        run: cd ./docs-app && yarn && yarn build:files

      - name: Committing and push changes
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add .
          git commit --amend --no-edit
          git push --force

  publish:
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.releases_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
          registry-url: 'https://registry.npmjs.org'

      - uses: ./.github/actions/cache-crates
        with:
          lockfiles: "c-dependencies/js-compute-runtime/**/Cargo.lock"

      - uses: ./.github/actions/install-rust
        with:
          path: c-dependencies

      - name: Cache SpiderMonkey object files
        uses: actions/cache@v2
        id: sm-cache
        with:
          path: |
            c-dependencies/spidermonkey/release
          key: cache-${{ hashFiles(
            'c-dependencies/spidermonkey/build-engine.sh',
            'c-dependencies/spidermonkey/gecko-revision',
            'c-dependencies/spidermonkey/object-files.list',
            'c-dependencies/rust-toolchain.toml'
            ) }}-release

      - name: "Build SpiderMonkey"
        if: ${{ steps.sm-cache.outputs.cache-hit != 'true' }}
        run: |
          cd c-dependencies/spidermonkey/
          bash ./build-engine.sh release

      - name: "Install wasi-sdk-17 (linux)"
        run: |
          set -x
          curl -sS -L -O https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-17/wasi-sdk-17.0-linux.tar.gz
          tar xf wasi-sdk-17.0-linux.tar.gz
          sudo mkdir -p /opt/wasi-sdk
          sudo mv wasi-sdk-17.0/* /opt/wasi-sdk/

      - name: "Install Binaryen (linux)"
        run: |
          set -x
          export BINARYEN_VERSION=105
          curl -sS -L "https://github.com/WebAssembly/binaryen/releases/download/version_${BINARYEN_VERSION}/binaryen-version_${BINARYEN_VERSION}-x86_64-linux.tar.gz" | tar xzf - &&
          echo "$PWD/binaryen-version_${BINARYEN_VERSION}/bin" >> $GITHUB_PATH

      - name: Cache built Rust dependencies
        uses: actions/cache@v3
        with:
          path: c-dependencies/js-compute-runtime/rusturl
          key: engine-cargo-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('c-dependencies/rust-toolchain.toml', 'c-dependencies/js-compute-runtime/**/Cargo.lock') }}
          # We trust cargo to only reuse valid parts of the cache when dependencies change.
          restore-keys: engine-cargo-${{ runner.os }}-${{ runner.arch }}-

      - run: yarn install --immutable
      
      - run: yarn build

      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - run: cd ./docs-app && yarn

      - name: Set up Fastly CLI
        uses: fastly/compute-actions/setup@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          cli_version: '4.3.0'
      
      - run: cd ./docs-app && yarn deploy
        env:
          FASTLY_API_TOKEN: ${{secrets.FASTLY_API_TOKEN}}
