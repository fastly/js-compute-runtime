{
  "Loading data…": {
    "status": "PASS"
  },
  "Parsing: <http://example\t.\norg> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://user:pass@foo:21/bar;par?b#c> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <https://test:@test> without base": {
    "status": "PASS"
  },
  "Parsing: <https://:@test> without base": {
    "status": "PASS"
  },
  "Parsing: <non-special://test:@test/x> without base": {
    "status": "PASS"
  },
  "Parsing: <non-special://:@test/x> without base": {
    "status": "PASS"
  },
  "Parsing: <http:foo.com> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <\t   :foo.com   \n> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: < foo.com  > against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <a:\t foo.com> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://f:21/ b ? d # e > against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <lolscheme:x x#x x> without base": {
    "status": "PASS"
  },
  "Parsing: <http://f:/c> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://f:0/c> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://f:00000000000000/c> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://f:00000000000000000000080/c> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://f:b/c> against <http://example.org/foo/bar>": {
    "status": "FAIL"
  },
  "Parsing: <http://f: /c> against <http://example.org/foo/bar>": {
    "status": "FAIL"
  },
  "Parsing: <http://f:\n/c> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://f:fifty-two/c> against <http://example.org/foo/bar>": {
    "status": "FAIL"
  },
  "Parsing: <http://f:999999/c> against <http://example.org/foo/bar>": {
    "status": "FAIL"
  },
  "Parsing: <non-special://f:999999/c> against <http://example.org/foo/bar>": {
    "status": "FAIL"
  },
  "Parsing: <http://f: 21 / b ? d # e > against <http://example.org/foo/bar>": {
    "status": "FAIL"
  },
  "Parsing: <> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <  \t> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <:foo.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <:foo.com\\> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <:> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <:a> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <:/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <:\\> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <:#> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <#> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <#/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <#\\> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <#;?> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <?> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: </> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <:23> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: </:23> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <\\x> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <\\\\x\\hello> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <::> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <::23> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <foo://> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://a:b@c:29/d> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http::@c:29> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://&a:foo(b]c@d:2/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://::@c@d:2> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://foo.com:b@d/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://foo.com/\\@> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http:\\\\foo.com\\> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http:\\\\a\\b:c\\d@foo.com\\> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <foo:/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <foo:/bar.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <foo://///////> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <foo://///////bar.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <foo:////://///> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <c:/foo> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <//foo/bar> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://foo/path;a??e#f#g> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://foo/abcd?efgh?ijkl> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://foo/abcd#foo?bar> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <[61:24:74]:98> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http:[61:27]/:foo> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://[1::2]:3:4> against <http://example.org/foo/bar>": {
    "status": "FAIL"
  },
  "Parsing: <http://2001::1> against <http://example.org/foo/bar>": {
    "status": "FAIL"
  },
  "Parsing: <http://2001::1]> against <http://example.org/foo/bar>": {
    "status": "FAIL"
  },
  "Parsing: <http://2001::1]:80> against <http://example.org/foo/bar>": {
    "status": "FAIL"
  },
  "Parsing: <http://[2001::1]> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://[::127.0.0.1]> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://[::127.0.0.1.]> against <http://example.org/foo/bar>": {
    "status": "FAIL"
  },
  "Parsing: <http://[0:0:0:0:0:0:13.1.68.3]> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://[2001::1]:80> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http:/example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <ftp:/example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <https:/example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <madeupscheme:/example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <file:/example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <file://example:1/> without base": {
    "status": "FAIL"
  },
  "Parsing: <file://example:test/> without base": {
    "status": "FAIL"
  },
  "Parsing: <file://example%/> without base": {
    "status": "FAIL"
  },
  "Parsing: <file://[example]/> without base": {
    "status": "FAIL"
  },
  "Parsing: <ftps:/example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <gopher:/example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <ws:/example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <wss:/example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <data:/example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <javascript:/example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <mailto:/example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http:example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <ftp:example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <https:example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <madeupscheme:example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <ftps:example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <gopher:example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <ws:example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <wss:example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <data:example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <javascript:example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <mailto:example.com/> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: </a/b/c> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: </a/ /c> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: </a%2fc> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: </a/%2f/c> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <#β> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <data:text/html,test#test> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <tel:1234567890> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <ssh://example.com/foo/bar.git> against <http://example.org/>": {
    "status": "PASS"
  },
  "Parsing: <file:c:\\foo\\bar.html> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: <  File:c|////foo\\bar.html> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: <C|/foo/bar> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: </C|\\foo\\bar> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: <//C|/foo/bar> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: <//server/file> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: <\\\\server\\file> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: </\\server/file> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: <file:///foo/bar.txt> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: <file:///home/me> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: <//> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: <///> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: <///test> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: <file://test> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: <file://localhost> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: <file://localhost/> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: <file://localhost/test> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: <test> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: <file:test> against <file:///tmp/mock/path>": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/././foo> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/./.foo> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo/.> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo/./> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo/bar/..> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo/bar/../> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo/..bar> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo/bar/../ton> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo/bar/../ton/../../a> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo/../../..> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo/../../../ton> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo/%2e> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo/%2e%2> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo/%2e./%2e%2e/.%2e/%2e.bar> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com////../..> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo/bar//../..> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo/bar//..> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/%20foo> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo%> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo%2> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo%2zbar> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo%2Â©zbar> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo%41%7a> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo\t%91> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo%00%51> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/(%28:%3A%29)> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/%3A%3a%3C%3c> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/foo\tbar> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com\\\\foo\\\\bar> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/%7Ffp3%3Eju%3Dduvgw%3Dd> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/@asdf%40> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/你好你好> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/‥/foo> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/﻿/foo> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/‮/foo/‭/bar> without base": {
    "status": "PASS"
  },
  "Parsing: <http://www.google.com/foo?bar=baz#> without base": {
    "status": "PASS"
  },
  "Parsing: <http://www.google.com/foo?bar=baz# »> without base": {
    "status": "PASS"
  },
  "Parsing: <data:test# »> without base": {
    "status": "PASS"
  },
  "Parsing: <http://www.google.com> without base": {
    "status": "PASS"
  },
  "Parsing: <http://192.0x00A80001> without base": {
    "status": "PASS"
  },
  "Parsing: <http://www/foo%2Ehtml> without base": {
    "status": "PASS"
  },
  "Parsing: <http://www/foo/%2E/html> without base": {
    "status": "PASS"
  },
  "Parsing: <http://user:pass@/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://%25DOMAIN:foobar@foodomain.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <http:\\\\www.google.com\\foo> without base": {
    "status": "PASS"
  },
  "Parsing: <http://foo:80/> without base": {
    "status": "PASS"
  },
  "Parsing: <http://foo:81/> without base": {
    "status": "PASS"
  },
  "Parsing: <httpa://foo:80/> without base": {
    "status": "PASS"
  },
  "Parsing: <http://foo:-80/> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://foo:443/> without base": {
    "status": "PASS"
  },
  "Parsing: <https://foo:80/> without base": {
    "status": "PASS"
  },
  "Parsing: <ftp://foo:21/> without base": {
    "status": "PASS"
  },
  "Parsing: <ftp://foo:80/> without base": {
    "status": "PASS"
  },
  "Parsing: <gopher://foo:70/> without base": {
    "status": "PASS"
  },
  "Parsing: <gopher://foo:443/> without base": {
    "status": "PASS"
  },
  "Parsing: <ws://foo:80/> without base": {
    "status": "PASS"
  },
  "Parsing: <ws://foo:81/> without base": {
    "status": "PASS"
  },
  "Parsing: <ws://foo:443/> without base": {
    "status": "PASS"
  },
  "Parsing: <ws://foo:815/> without base": {
    "status": "PASS"
  },
  "Parsing: <wss://foo:80/> without base": {
    "status": "PASS"
  },
  "Parsing: <wss://foo:81/> without base": {
    "status": "PASS"
  },
  "Parsing: <wss://foo:443/> without base": {
    "status": "PASS"
  },
  "Parsing: <wss://foo:815/> without base": {
    "status": "PASS"
  },
  "Parsing: <http:/example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <ftp:/example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <https:/example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <madeupscheme:/example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <file:/example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <ftps:/example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <gopher:/example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <ws:/example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <wss:/example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <data:/example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <javascript:/example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <mailto:/example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <http:example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <ftp:example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <https:example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <madeupscheme:example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <ftps:example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <gopher:example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <ws:example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <wss:example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <data:example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <javascript:example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <mailto:example.com/> without base": {
    "status": "PASS"
  },
  "Parsing: <http:@www.example.com> without base": {
    "status": "PASS"
  },
  "Parsing: <http:/@www.example.com> without base": {
    "status": "PASS"
  },
  "Parsing: <http://@www.example.com> without base": {
    "status": "PASS"
  },
  "Parsing: <http:a:b@www.example.com> without base": {
    "status": "PASS"
  },
  "Parsing: <http:/a:b@www.example.com> without base": {
    "status": "PASS"
  },
  "Parsing: <http://a:b@www.example.com> without base": {
    "status": "PASS"
  },
  "Parsing: <http://@pple.com> without base": {
    "status": "PASS"
  },
  "Parsing: <http::b@www.example.com> without base": {
    "status": "PASS"
  },
  "Parsing: <http:/:b@www.example.com> without base": {
    "status": "PASS"
  },
  "Parsing: <http://:b@www.example.com> without base": {
    "status": "PASS"
  },
  "Parsing: <http:/:@/www.example.com> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://user@/www.example.com> without base": {
    "status": "FAIL"
  },
  "Parsing: <http:@/www.example.com> without base": {
    "status": "FAIL"
  },
  "Parsing: <http:/@/www.example.com> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://@/www.example.com> without base": {
    "status": "FAIL"
  },
  "Parsing: <https:@/www.example.com> without base": {
    "status": "FAIL"
  },
  "Parsing: <http:a:b@/www.example.com> without base": {
    "status": "FAIL"
  },
  "Parsing: <http:/a:b@/www.example.com> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a:b@/www.example.com> without base": {
    "status": "FAIL"
  },
  "Parsing: <http::@/www.example.com> without base": {
    "status": "FAIL"
  },
  "Parsing: <http:a:@www.example.com> without base": {
    "status": "PASS"
  },
  "Parsing: <http:/a:@www.example.com> without base": {
    "status": "PASS"
  },
  "Parsing: <http://a:@www.example.com> without base": {
    "status": "PASS"
  },
  "Parsing: <http://www.@pple.com> without base": {
    "status": "PASS"
  },
  "Parsing: <http:@:www.example.com> without base": {
    "status": "FAIL"
  },
  "Parsing: <http:/@:www.example.com> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://@:www.example.com> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://:@www.example.com> without base": {
    "status": "PASS"
  },
  "Parsing: </> against <http://www.example.com/test>": {
    "status": "PASS"
  },
  "Parsing: </test.txt> against <http://www.example.com/test>": {
    "status": "PASS"
  },
  "Parsing: <.> against <http://www.example.com/test>": {
    "status": "PASS"
  },
  "Parsing: <..> against <http://www.example.com/test>": {
    "status": "PASS"
  },
  "Parsing: <test.txt> against <http://www.example.com/test>": {
    "status": "PASS"
  },
  "Parsing: <./test.txt> against <http://www.example.com/test>": {
    "status": "PASS"
  },
  "Parsing: <../test.txt> against <http://www.example.com/test>": {
    "status": "PASS"
  },
  "Parsing: <../aaa/test.txt> against <http://www.example.com/test>": {
    "status": "PASS"
  },
  "Parsing: <../../test.txt> against <http://www.example.com/test>": {
    "status": "PASS"
  },
  "Parsing: <中/test.txt> against <http://www.example.com/test>": {
    "status": "PASS"
  },
  "Parsing: <http://www.example2.com> against <http://www.example.com/test>": {
    "status": "PASS"
  },
  "Parsing: <//www.example2.com> against <http://www.example.com/test>": {
    "status": "PASS"
  },
  "Parsing: <file:...> against <http://www.example.com/test>": {
    "status": "PASS"
  },
  "Parsing: <file:..> against <http://www.example.com/test>": {
    "status": "PASS"
  },
  "Parsing: <file:a> against <http://www.example.com/test>": {
    "status": "PASS"
  },
  "Parsing: <http://ExAmPlE.CoM> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://example example.com> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://Goo%20 goo%7C|.com> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://[]> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://[:]> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://GOO 　goo.com> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://GOO​⁠﻿goo.com> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <\u0000\u001b\u0004\u0012 http://example.com/\u001f \r > without base": {
    "status": "PASS"
  },
  "Parsing: <http://www.foo。bar.com> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://﷐zyx.com> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://%ef%b7%90zyx.com> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <https://�> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://%EF%BF%BD> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://x/�?�#�> without base": {
    "status": "PASS"
  },
  "Parsing: <http://a.b.c.xn--pokxncvks> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://10.0.0.xn--pokxncvks> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a.b.c.XN--pokxncvks> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a.b.c.Xn--pokxncvks> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://10.0.0.XN--pokxncvks> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://10.0.0.xN--pokxncvks> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://Ｇｏ.com> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://％４１.com> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://%ef%bc%85%ef%bc%94%ef%bc%91.com> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://％００.com> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://%ef%bc%85%ef%bc%90%ef%bc%90.com> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://你好你好> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <https://faß.ExAmPlE/> without base": {
    "status": "PASS"
  },
  "Parsing: <sc://faß.ExAmPlE/> without base": {
    "status": "PASS"
  },
  "Parsing: <http://%zz%66%a.com> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://%25> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://hello%00> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://%30%78%63%30%2e%30%32%35%30.01> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://%30%78%63%30%2e%30%32%35%30.01%2e> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://192.168.0.257> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://%3g%78%63%30%2e%30%32%35%30%2E.01> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://192.168.0.1 hello> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <https://x x:12> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://０Ｘｃ０．０２５０．０１> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://./> without base": {
    "status": "PASS"
  },
  "Parsing: <http://../> without base": {
    "status": "PASS"
  },
  "Parsing: <h://.> without base": {
    "status": "PASS"
  },
  "Parsing: <http://[www.google.com]/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://[google.com]> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://[::1.2.3.4x]> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://[::1.2.3.]> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://[::1.2.]> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://[::.1.2]> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://[::1.]> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://[::.1]> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://[::%31]> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://%5B::1]> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://foo:💩@example.com/bar> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <#> against <test:test>": {
    "status": "PASS"
  },
  "Parsing: <#x> against <mailto:x@x.com>": {
    "status": "PASS"
  },
  "Parsing: <#x> against <data:,>": {
    "status": "PASS"
  },
  "Parsing: <#x> against <about:blank>": {
    "status": "PASS"
  },
  "Parsing: <#x:y> against <about:blank>": {
    "status": "PASS"
  },
  "Parsing: <#> against <test:test?test>": {
    "status": "PASS"
  },
  "Parsing: <https://@test@test@example:800/> against <http://doesnotmatter/>": {
    "status": "PASS"
  },
  "Parsing: <https://@@@example> against <http://doesnotmatter/>": {
    "status": "PASS"
  },
  "Parsing: <http://`{}:`{}@h/`{}?`{}> against <http://doesnotmatter/>": {
    "status": "PASS"
  },
  "Parsing: <http://host/?'> without base": {
    "status": "PASS"
  },
  "Parsing: <notspecial://host/?'> without base": {
    "status": "PASS"
  },
  "Parsing: </some/path> against <http://user@example.org/smth>": {
    "status": "PASS"
  },
  "Parsing: <> against <http://user:pass@example.org:21/smth>": {
    "status": "PASS"
  },
  "Parsing: </some/path> against <http://user:pass@example.org:21/smth>": {
    "status": "PASS"
  },
  "Parsing: <i> against <sc:sd>": {
    "status": "FAIL"
  },
  "Parsing: <i> against <sc:sd/sd>": {
    "status": "FAIL"
  },
  "Parsing: <i> against <sc:/pa/pa>": {
    "status": "PASS"
  },
  "Parsing: <i> against <sc://ho/pa>": {
    "status": "PASS"
  },
  "Parsing: <i> against <sc:///pa/pa>": {
    "status": "PASS"
  },
  "Parsing: <../i> against <sc:sd>": {
    "status": "FAIL"
  },
  "Parsing: <../i> against <sc:sd/sd>": {
    "status": "FAIL"
  },
  "Parsing: <../i> against <sc:/pa/pa>": {
    "status": "PASS"
  },
  "Parsing: <../i> against <sc://ho/pa>": {
    "status": "PASS"
  },
  "Parsing: <../i> against <sc:///pa/pa>": {
    "status": "PASS"
  },
  "Parsing: </i> against <sc:sd>": {
    "status": "FAIL"
  },
  "Parsing: </i> against <sc:sd/sd>": {
    "status": "FAIL"
  },
  "Parsing: </i> against <sc:/pa/pa>": {
    "status": "PASS"
  },
  "Parsing: </i> against <sc://ho/pa>": {
    "status": "PASS"
  },
  "Parsing: </i> against <sc:///pa/pa>": {
    "status": "PASS"
  },
  "Parsing: <?i> against <sc:sd>": {
    "status": "FAIL"
  },
  "Parsing: <?i> against <sc:sd/sd>": {
    "status": "FAIL"
  },
  "Parsing: <?i> against <sc:/pa/pa>": {
    "status": "PASS"
  },
  "Parsing: <?i> against <sc://ho/pa>": {
    "status": "PASS"
  },
  "Parsing: <?i> against <sc:///pa/pa>": {
    "status": "PASS"
  },
  "Parsing: <#i> against <sc:sd>": {
    "status": "PASS"
  },
  "Parsing: <#i> against <sc:sd/sd>": {
    "status": "PASS"
  },
  "Parsing: <#i> against <sc:/pa/pa>": {
    "status": "PASS"
  },
  "Parsing: <#i> against <sc://ho/pa>": {
    "status": "PASS"
  },
  "Parsing: <#i> against <sc:///pa/pa>": {
    "status": "PASS"
  },
  "Parsing: <about:/../> without base": {
    "status": "PASS"
  },
  "Parsing: <data:/../> without base": {
    "status": "PASS"
  },
  "Parsing: <javascript:/../> without base": {
    "status": "PASS"
  },
  "Parsing: <mailto:/../> without base": {
    "status": "PASS"
  },
  "Parsing: <sc://ñ.test/> without base": {
    "status": "PASS"
  },
  "Parsing: <sc://%/> without base": {
    "status": "PASS"
  },
  "Parsing: <sc://@/> without base": {
    "status": "FAIL"
  },
  "Parsing: <sc://te@s:t@/> without base": {
    "status": "FAIL"
  },
  "Parsing: <sc://:/> without base": {
    "status": "FAIL"
  },
  "Parsing: <sc://:12/> without base": {
    "status": "FAIL"
  },
  "Parsing: <x> against <sc://ñ>": {
    "status": "PASS"
  },
  "Parsing: <sc:\\../> without base": {
    "status": "PASS"
  },
  "Parsing: <sc::a@example.net> without base": {
    "status": "PASS"
  },
  "Parsing: <wow:%NBD> without base": {
    "status": "PASS"
  },
  "Parsing: <wow:%1G> without base": {
    "status": "PASS"
  },
  "Parsing: <wow:￿> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.com/U+d800𐟾U+dfff﷐﷏﷯ﷰ￾￿?U+d800𐟾U+dfff﷐﷏﷯ﷰ￾￿> without base": {
    "status": "PASS"
  },
  "Parsing: <sc://a\u0000b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <sc://a b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <sc://a<b> without base": {
    "status": "FAIL"
  },
  "Parsing: <sc://a>b> without base": {
    "status": "FAIL"
  },
  "Parsing: <sc://a[b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <sc://a\\b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <sc://a]b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <sc://a^b> without base": {
    "status": "FAIL"
  },
  "Parsing: <sc://a|b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <foo://ho\tst/> without base": {
    "status": "PASS"
  },
  "Parsing: <foo://ho\nst/> without base": {
    "status": "PASS"
  },
  "Parsing: <foo://ho\rst/> without base": {
    "status": "PASS"
  },
  "Parsing: <http://a\u0000b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u0001b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u0002b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u0003b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u0004b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u0005b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u0006b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u0007b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\bb/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u000bb/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\fb/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u000eb/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u000fb/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u0010b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u0011b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u0012b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u0013b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u0014b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u0015b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u0016b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u0017b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u0018b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u0019b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u001ab/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u001bb/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u001cb/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u001db/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u001eb/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a\u001fb/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a%b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a<b> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a>b> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a[b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a]b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a^b> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://a|b/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ab/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho\tst/> without base": {
    "status": "PASS"
  },
  "Parsing: <http://ho\nst/> without base": {
    "status": "PASS"
  },
  "Parsing: <http://ho\rst/> without base": {
    "status": "PASS"
  },
  "Parsing: <http://ho%00st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%01st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%02st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%03st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%04st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%05st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%06st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%07st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%08st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%09st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%0Ast/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%0Bst/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%0Cst/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%0Dst/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%0Est/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%0Fst/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%10st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%11st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%12st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%13st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%14st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%15st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%16st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%17st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%18st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%19st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%1Ast/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%1Bst/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%1Cst/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%1Dst/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%1Est/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%1Fst/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%20st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%23st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%25st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%2Fst/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%3Ast/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%3Cst/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%3Est/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%3Fst/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%40st/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%5Bst/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%5Cst/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%5Dst/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%7Cst/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://ho%7Fst/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://!\"$&'()*+,-.;=_`{}~/> without base": {
    "status": "PASS"
  },
  "Parsing: <sc://\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\u000b\f\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f!\"$%&'()*+,-.;=_`{}~/> without base": {
    "status": "PASS"
  },
  "Parsing: <ftp://example.com%80/> without base": {
    "status": "FAIL"
  },
  "Parsing: <ftp://example.com%A0/> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://example.com%80/> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://example.com%A0/> without base": {
    "status": "FAIL"
  },
  "Parsing: <ftp://%e2%98%83> without base": {
    "status": "PASS"
  },
  "Parsing: <https://%e2%98%83> without base": {
    "status": "PASS"
  },
  "Parsing: <http://127.0.0.1:10100/relative_import.html> without base": {
    "status": "PASS"
  },
  "Parsing: <http://facebook.com/?foo=%7B%22abc%22> without base": {
    "status": "PASS"
  },
  "Parsing: <https://localhost:3000/jqueryui@1.2.3> without base": {
    "status": "PASS"
  },
  "Parsing: <h\tt\nt\rp://h\to\ns\rt:9\t0\n0\r0/p\ta\nt\rh?q\tu\ne\rry#f\tr\na\rg> without base": {
    "status": "PASS"
  },
  "Parsing: <?a=b&c=d> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <??a=b&c=d> against <http://example.org/foo/bar>": {
    "status": "FAIL"
  },
  "Parsing: <http:> against <http://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http:> against <https://example.org/foo/bar>": {
    "status": "FAIL"
  },
  "Parsing: <sc:> against <https://example.org/foo/bar>": {
    "status": "PASS"
  },
  "Parsing: <http://foo.bar/baz?qux#foo\bbar> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://foo.bar/baz?qux#foo\"bar> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://foo.bar/baz?qux#foo<bar> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://foo.bar/baz?qux#foo>bar> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://foo.bar/baz?qux#foo`bar> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://1.2.3.4/> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://1.2.3.4./> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://192.168.257> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://192.168.257.> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://192.168.257.com> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://256> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://256.com> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://999999999> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://999999999.> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://999999999.com> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://10000000000> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://10000000000.com> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://4294967295> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://4294967296> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://0xffffffff> against <http://other.com/>": {
    "status": "PASS"
  },
  "Parsing: <http://0xffffffff1> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://256.256.256.256> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <https://0x.0x.0> without base": {
    "status": "PASS"
  },
  "Parsing: <https://0x100000000/test> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://256.0.0.1/test> without base": {
    "status": "FAIL"
  },
  "Parsing: <file:///C%3A/> without base": {
    "status": "PASS"
  },
  "Parsing: <file:///C%7C/> without base": {
    "status": "PASS"
  },
  "Parsing: <file://%43%3A> without base": {
    "status": "FAIL"
  },
  "Parsing: <file://%43%7C> without base": {
    "status": "FAIL"
  },
  "Parsing: <file://%43|> without base": {
    "status": "FAIL"
  },
  "Parsing: <file://C%7C> without base": {
    "status": "FAIL"
  },
  "Parsing: <file://%43%7C/> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://%43%7C/> without base": {
    "status": "FAIL"
  },
  "Parsing: <asdf://%43|/> without base": {
    "status": "FAIL"
  },
  "Parsing: <asdf://%43%7C/> without base": {
    "status": "PASS"
  },
  "Parsing: <pix/submit.gif> against <file:///C:/Users/Domenic/Dropbox/GitHub/tmpvar/jsdom/test/level2/html/files/anchor.html>": {
    "status": "PASS"
  },
  "Parsing: <..> against <file:///C:/>": {
    "status": "PASS"
  },
  "Parsing: <..> against <file:///>": {
    "status": "PASS"
  },
  "Parsing: </> against <file:///C:/a/b>": {
    "status": "PASS"
  },
  "Parsing: </> against <file://h/C:/a/b>": {
    "status": "FAIL"
  },
  "Parsing: </> against <file://h/a/b>": {
    "status": "PASS"
  },
  "Parsing: <//d:> against <file:///C:/a/b>": {
    "status": "PASS"
  },
  "Parsing: <//d:/..> against <file:///C:/a/b>": {
    "status": "PASS"
  },
  "Parsing: <..> against <file:///ab:/>": {
    "status": "PASS"
  },
  "Parsing: <..> against <file:///1:/>": {
    "status": "PASS"
  },
  "Parsing: <> against <file:///test?test#test>": {
    "status": "PASS"
  },
  "Parsing: <file:> against <file:///test?test#test>": {
    "status": "PASS"
  },
  "Parsing: <?x> against <file:///test?test#test>": {
    "status": "PASS"
  },
  "Parsing: <file:?x> against <file:///test?test#test>": {
    "status": "PASS"
  },
  "Parsing: <#x> against <file:///test?test#test>": {
    "status": "PASS"
  },
  "Parsing: <file:#x> against <file:///test?test#test>": {
    "status": "PASS"
  },
  "Parsing: <file:\\\\//> without base": {
    "status": "FAIL"
  },
  "Parsing: <file:\\\\\\\\> without base": {
    "status": "FAIL"
  },
  "Parsing: <file:\\\\\\\\?fox> without base": {
    "status": "FAIL"
  },
  "Parsing: <file:\\\\\\\\#guppy> without base": {
    "status": "FAIL"
  },
  "Parsing: <file://spider///> without base": {
    "status": "FAIL"
  },
  "Parsing: <file:\\\\localhost//> without base": {
    "status": "FAIL"
  },
  "Parsing: <file:///localhost//cat> without base": {
    "status": "PASS"
  },
  "Parsing: <file://\\/localhost//cat> without base": {
    "status": "FAIL"
  },
  "Parsing: <file://localhost//a//../..//> without base": {
    "status": "FAIL"
  },
  "Parsing: </////mouse> against <file:///elephant>": {
    "status": "FAIL"
  },
  "Parsing: <\\//pig> against <file://lion/>": {
    "status": "PASS"
  },
  "Parsing: <\\/localhost//pig> against <file://lion/>": {
    "status": "FAIL"
  },
  "Parsing: <//localhost//pig> against <file://lion/>": {
    "status": "FAIL"
  },
  "Parsing: </..//localhost//pig> against <file://lion/>": {
    "status": "FAIL"
  },
  "Parsing: <file://> against <file://ape/>": {
    "status": "PASS"
  },
  "Parsing: </rooibos> against <file://tea/>": {
    "status": "PASS"
  },
  "Parsing: </?chai> against <file://tea/>": {
    "status": "PASS"
  },
  "Parsing: <C|> against <file://host/dir/file>": {
    "status": "FAIL"
  },
  "Parsing: <C|> against <file://host/D:/dir1/dir2/file>": {
    "status": "FAIL"
  },
  "Parsing: <C|#> against <file://host/dir/file>": {
    "status": "FAIL"
  },
  "Parsing: <C|?> against <file://host/dir/file>": {
    "status": "FAIL"
  },
  "Parsing: <C|/> against <file://host/dir/file>": {
    "status": "FAIL"
  },
  "Parsing: <C|\n/> against <file://host/dir/file>": {
    "status": "FAIL"
  },
  "Parsing: <C|\\> against <file://host/dir/file>": {
    "status": "FAIL"
  },
  "Parsing: <C> against <file://host/dir/file>": {
    "status": "PASS"
  },
  "Parsing: <C|a> against <file://host/dir/file>": {
    "status": "PASS"
  },
  "Parsing: </c:/foo/bar> against <file:///c:/baz/qux>": {
    "status": "PASS"
  },
  "Parsing: </c|/foo/bar> against <file:///c:/baz/qux>": {
    "status": "PASS"
  },
  "Parsing: <file:\\c:\\foo\\bar> against <file:///c:/baz/qux>": {
    "status": "PASS"
  },
  "Parsing: </c:/foo/bar> against <file://host/path>": {
    "status": "FAIL"
  },
  "Parsing: <file://example.net/C:/> without base": {
    "status": "FAIL"
  },
  "Parsing: <file://1.2.3.4/C:/> without base": {
    "status": "FAIL"
  },
  "Parsing: <file://[1::8]/C:/> without base": {
    "status": "FAIL"
  },
  "Parsing: <C|/> against <file://host/>": {
    "status": "FAIL"
  },
  "Parsing: </C:/> against <file://host/>": {
    "status": "FAIL"
  },
  "Parsing: <file:C:/> against <file://host/>": {
    "status": "FAIL"
  },
  "Parsing: <file:/C:/> against <file://host/>": {
    "status": "FAIL"
  },
  "Parsing: <//C:/> against <file://host/>": {
    "status": "PASS"
  },
  "Parsing: <file://C:/> against <file://host/>": {
    "status": "PASS"
  },
  "Parsing: <///C:/> against <file://host/>": {
    "status": "PASS"
  },
  "Parsing: <file:///C:/> against <file://host/>": {
    "status": "PASS"
  },
  "Parsing: <file:/C|/> without base": {
    "status": "PASS"
  },
  "Parsing: <file://C|/> without base": {
    "status": "PASS"
  },
  "Parsing: <file:> without base": {
    "status": "PASS"
  },
  "Parsing: <file:?q=v> without base": {
    "status": "PASS"
  },
  "Parsing: <file:#frag> without base": {
    "status": "PASS"
  },
  "Parsing: <file:///Y:> without base": {
    "status": "PASS"
  },
  "Parsing: <file:///Y:/> without base": {
    "status": "PASS"
  },
  "Parsing: <file:///./Y> without base": {
    "status": "PASS"
  },
  "Parsing: <file:///./Y:> without base": {
    "status": "PASS"
  },
  "Parsing: <\\\\\\.\\Y:> without base": {
    "status": "FAIL"
  },
  "Parsing: <file:///y:> without base": {
    "status": "PASS"
  },
  "Parsing: <file:///y:/> without base": {
    "status": "PASS"
  },
  "Parsing: <file:///./y> without base": {
    "status": "PASS"
  },
  "Parsing: <file:///./y:> without base": {
    "status": "PASS"
  },
  "Parsing: <\\\\\\.\\y:> without base": {
    "status": "FAIL"
  },
  "Parsing: <file://localhost//a//../..//foo> without base": {
    "status": "FAIL"
  },
  "Parsing: <file://localhost////foo> without base": {
    "status": "FAIL"
  },
  "Parsing: <file:////foo> without base": {
    "status": "FAIL"
  },
  "Parsing: <file:///one/two> against <file:///>": {
    "status": "PASS"
  },
  "Parsing: <file:////one/two> against <file:///>": {
    "status": "FAIL"
  },
  "Parsing: <//one/two> against <file:///>": {
    "status": "PASS"
  },
  "Parsing: <///one/two> against <file:///>": {
    "status": "PASS"
  },
  "Parsing: <////one/two> against <file:///>": {
    "status": "FAIL"
  },
  "Parsing: <file:///.//> against <file:////>": {
    "status": "FAIL"
  },
  "Parsing: <file:.//p> without base": {
    "status": "FAIL"
  },
  "Parsing: <file:/.//p> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://[1:0::]> against <http://example.net/>": {
    "status": "PASS"
  },
  "Parsing: <http://[0:1:2:3:4:5:6:7:8]> against <http://example.net/>": {
    "status": "FAIL"
  },
  "Parsing: <https://[0::0::0]> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://[0:.0]> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://[0:0:]> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://[0:1:2:3:4:5:6:7.0.0.0.1]> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://[0:1.00.0.0.0]> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://[0:1.290.0.0.0]> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://[0:1.23.23]> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://?> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://#> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://f:4294967377/c> against <http://example.org/>": {
    "status": "FAIL"
  },
  "Parsing: <http://f:18446744073709551697/c> against <http://example.org/>": {
    "status": "FAIL"
  },
  "Parsing: <http://f:340282366920938463463374607431768211537/c> against <http://example.org/>": {
    "status": "FAIL"
  },
  "Parsing: <sc://ñ> without base": {
    "status": "PASS"
  },
  "Parsing: <sc://ñ?x> without base": {
    "status": "PASS"
  },
  "Parsing: <sc://ñ#x> without base": {
    "status": "PASS"
  },
  "Parsing: <#x> against <sc://ñ>": {
    "status": "PASS"
  },
  "Parsing: <?x> against <sc://ñ>": {
    "status": "PASS"
  },
  "Parsing: <sc://?> without base": {
    "status": "PASS"
  },
  "Parsing: <sc://#> without base": {
    "status": "PASS"
  },
  "Parsing: <///> against <sc://x/>": {
    "status": "PASS"
  },
  "Parsing: <////> against <sc://x/>": {
    "status": "PASS"
  },
  "Parsing: <////x/> against <sc://x/>": {
    "status": "PASS"
  },
  "Parsing: <tftp://foobar.com/someconfig;mode=netascii> without base": {
    "status": "PASS"
  },
  "Parsing: <telnet://user:pass@foobar.com:23/> without base": {
    "status": "PASS"
  },
  "Parsing: <ut2004://10.10.10.10:7777/Index.ut2> without base": {
    "status": "PASS"
  },
  "Parsing: <redis://foo:bar@somehost:6379/0?baz=bam&qux=baz> without base": {
    "status": "PASS"
  },
  "Parsing: <rsync://foo@host:911/sup> without base": {
    "status": "PASS"
  },
  "Parsing: <git://github.com/foo/bar.git> without base": {
    "status": "PASS"
  },
  "Parsing: <irc://myserver.com:6999/channel?passwd> without base": {
    "status": "PASS"
  },
  "Parsing: <dns://fw.example.org:9999/foo.bar.org?type=TXT> without base": {
    "status": "PASS"
  },
  "Parsing: <ldap://localhost:389/ou=People,o=JNDITutorial> without base": {
    "status": "PASS"
  },
  "Parsing: <git+https://github.com/foo/bar> without base": {
    "status": "PASS"
  },
  "Parsing: <urn:ietf:rfc:2648> without base": {
    "status": "PASS"
  },
  "Parsing: <tag:joe@example.org,2001:foo/bar> without base": {
    "status": "PASS"
  },
  "Parsing: <non-spec:/.//> without base": {
    "status": "FAIL"
  },
  "Parsing: <non-spec:/..//> without base": {
    "status": "FAIL"
  },
  "Parsing: <non-spec:/a/..//> without base": {
    "status": "FAIL"
  },
  "Parsing: <non-spec:/.//path> without base": {
    "status": "FAIL"
  },
  "Parsing: <non-spec:/..//path> without base": {
    "status": "FAIL"
  },
  "Parsing: <non-spec:/a/..//path> without base": {
    "status": "FAIL"
  },
  "Parsing: </.//path> against <non-spec:/p>": {
    "status": "FAIL"
  },
  "Parsing: </..//path> against <non-spec:/p>": {
    "status": "FAIL"
  },
  "Parsing: <..//path> against <non-spec:/p>": {
    "status": "FAIL"
  },
  "Parsing: <a/..//path> against <non-spec:/p>": {
    "status": "FAIL"
  },
  "Parsing: <> against <non-spec:/..//p>": {
    "status": "FAIL"
  },
  "Parsing: <path> against <non-spec:/..//p>": {
    "status": "FAIL"
  },
  "Parsing: <../path> against <non-spec:/.//p>": {
    "status": "PASS"
  },
  "Parsing: <non-special://%E2%80%A0/> without base": {
    "status": "PASS"
  },
  "Parsing: <non-special://H%4fSt/path> without base": {
    "status": "PASS"
  },
  "Parsing: <non-special://[1:2:0:0:5:0:0:0]/> without base": {
    "status": "PASS"
  },
  "Parsing: <non-special://[1:2:0:0:0:0:0:3]/> without base": {
    "status": "PASS"
  },
  "Parsing: <non-special://[1:2::3]:80/> without base": {
    "status": "PASS"
  },
  "Parsing: <non-special://[:80/> without base": {
    "status": "FAIL"
  },
  "Parsing: <blob:https://example.com:443/> without base": {
    "status": "PASS"
  },
  "Parsing: <blob:http://example.org:88/> without base": {
    "status": "PASS"
  },
  "Parsing: <blob:d3958f5c-0777-0845-9dcf-2cb28783acaf> without base": {
    "status": "PASS"
  },
  "Parsing: <blob:> without base": {
    "status": "PASS"
  },
  "Parsing: <blob:blob:> without base": {
    "status": "PASS"
  },
  "Parsing: <blob:blob:https://example.org/> without base": {
    "status": "PASS"
  },
  "Parsing: <blob:about:blank> without base": {
    "status": "PASS"
  },
  "Parsing: <blob:file://host/path> without base": {
    "status": "PASS"
  },
  "Parsing: <blob:ftp://host/path> without base": {
    "status": "PASS"
  },
  "Parsing: <blob:ws://example.org/> without base": {
    "status": "PASS"
  },
  "Parsing: <blob:wss://example.org/> without base": {
    "status": "PASS"
  },
  "Parsing: <blob:http%3a//example.org/> without base": {
    "status": "PASS"
  },
  "Parsing: <http://0x7f.0.0.0x7g> without base": {
    "status": "PASS"
  },
  "Parsing: <http://0X7F.0.0.0X7G> without base": {
    "status": "PASS"
  },
  "Parsing: <http://[::127.0.0.0.1]> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://[0:1:0:1:0:1:0:1]> without base": {
    "status": "PASS"
  },
  "Parsing: <http://[1:0:1:0:1:0:1:0]> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.org/test?\"> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.org/test?#> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.org/test?<> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.org/test?>> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.org/test?⌣> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.org/test?%23%23> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.org/test?%GH> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.org/test?a#%EF> without base": {
    "status": "PASS"
  },
  "Parsing: <http://example.org/test?a#%GH> without base": {
    "status": "PASS"
  },
  "Parsing: <a> without base": {
    "status": "FAIL"
  },
  "Parsing: <a/> without base": {
    "status": "FAIL"
  },
  "Parsing: <a//> without base": {
    "status": "FAIL"
  },
  "Parsing: <test-a-colon.html> against <a:>": {
    "status": "FAIL"
  },
  "Parsing: <test-a-colon-b.html> against <a:b>": {
    "status": "FAIL"
  },
  "Parsing: <test-a-colon-slash.html> against <a:/>": {
    "status": "PASS"
  },
  "Parsing: <test-a-colon-slash-slash.html> against <a://>": {
    "status": "PASS"
  },
  "Parsing: <test-a-colon-slash-b.html> against <a:/b>": {
    "status": "PASS"
  },
  "Parsing: <test-a-colon-slash-slash-b.html> against <a://b>": {
    "status": "PASS"
  },
  "Parsing: <http://example.org/test?a#b\u0000c> without base": {
    "status": "PASS"
  },
  "Parsing: <non-spec://example.org/test?a#b\u0000c> without base": {
    "status": "PASS"
  },
  "Parsing: <non-spec:/test?a#b\u0000c> without base": {
    "status": "PASS"
  },
  "Parsing: <10.0.0.7:8080/foo.html> against <file:///some/dir/bar.html>": {
    "status": "PASS"
  },
  "Parsing: <a!@$*=/foo.html> against <file:///some/dir/bar.html>": {
    "status": "PASS"
  },
  "Parsing: <a1234567890-+.:foo/bar> against <http://example.com/dir/file>": {
    "status": "PASS"
  },
  "Parsing: <file://a­b/p> without base": {
    "status": "PASS"
  },
  "Parsing: <file://a%C2%ADb/p> without base": {
    "status": "PASS"
  },
  "Parsing: <file://loC𝐀𝐋𝐇𝐨𝐬𝐭/usr/bin> without base": {
    "status": "PASS"
  },
  "Parsing: <file://­/p> without base": {
    "status": "FAIL"
  },
  "Parsing: <file://%C2%AD/p> without base": {
    "status": "FAIL"
  },
  "Parsing: <file://xn--/p> without base": {
    "status": "FAIL"
  },
  "Parsing: <#link> against <https://example.org/##link>": {
    "status": "PASS"
  },
  "Parsing: <non-special:cannot-be-a-base-url-\u0000\u0001\u001f\u001e~> without base": {
    "status": "PASS"
  },
  "Parsing: <https://www.example.com/path{path.html?query'=query#fragment<fragment> without base": {
    "status": "PASS"
  },
  "Parsing: <https://user:pass[@foo/bar> against <http://example.org>": {
    "status": "PASS"
  },
  "Parsing: <foo:// !\"$%&'()*+,-.;<=>@[\\]^_`{|}~@host/> without base": {
    "status": "PASS"
  },
  "Parsing: <wss:// !\"$%&'()*+,-.;<=>@[]^_`{|}~@host/> without base": {
    "status": "PASS"
  },
  "Parsing: <foo://joe: !\"$%&'()*+,-.:;<=>@[\\]^_`{|}~@host/> without base": {
    "status": "PASS"
  },
  "Parsing: <wss://joe: !\"$%&'()*+,-.:;<=>@[]^_`{|}~@host/> without base": {
    "status": "PASS"
  },
  "Parsing: <foo://!\"$%&'()*+,-.;=_`{}~/> without base": {
    "status": "PASS"
  },
  "Parsing: <wss://!\"$&'()*+,-.;=_`{}~/> without base": {
    "status": "PASS"
  },
  "Parsing: <foo://host/ !\"$%&'()*+,-./:;<=>@[\\]^_`{|}~> without base": {
    "status": "PASS"
  },
  "Parsing: <wss://host/ !\"$%&'()*+,-./:;<=>@[\\]^_`{|}~> without base": {
    "status": "PASS"
  },
  "Parsing: <foo://host/dir/? !\"$%&'()*+,-./:;<=>?@[\\]^_`{|}~> without base": {
    "status": "PASS"
  },
  "Parsing: <wss://host/dir/? !\"$%&'()*+,-./:;<=>?@[\\]^_`{|}~> without base": {
    "status": "PASS"
  },
  "Parsing: <foo://host/dir/# !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~> without base": {
    "status": "PASS"
  },
  "Parsing: <wss://host/dir/# !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~> without base": {
    "status": "PASS"
  },
  "Parsing: <abc:rootless> against <abc://host/path>": {
    "status": "PASS"
  },
  "Parsing: <abc:rootless> against <abc:/path>": {
    "status": "PASS"
  },
  "Parsing: <abc:rootless> against <abc:path>": {
    "status": "PASS"
  },
  "Parsing: <abc:/rooted> against <abc://host/path>": {
    "status": "PASS"
  },
  "Parsing: <#> without base": {
    "status": "FAIL"
  },
  "Parsing: <?> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://1.2.3.4.5> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://1.2.3.4.5.> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://0..0x300/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://0..0x300./> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://256.256.256.256.256> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://256.256.256.256.256.> against <http://other.com/>": {
    "status": "FAIL"
  },
  "Parsing: <http://1.2.3.08> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://1.2.3.08.> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://1.2.3.09> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://09.2.3.4> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://09.2.3.4.> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://01.2.3.4.5> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://01.2.3.4.5.> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://0x100.2.3.4> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://0x100.2.3.4.> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://0x1.2.3.4.5> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://0x1.2.3.4.5.> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://foo.1.2.3.4> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://foo.1.2.3.4.> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://foo.2.3.4> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://foo.2.3.4.> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://foo.09> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://foo.09.> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://foo.0x4> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://foo.0x4.> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://foo.09..> without base": {
    "status": "PASS"
  },
  "Parsing: <http://0999999999999999999/> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://foo.0x> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://foo.0XFfFfFfFfFfFfFfFfFfAcE123> without base": {
    "status": "FAIL"
  },
  "Parsing: <http://💩.123/> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://\u0000y> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://x/\u0000y> without base": {
    "status": "PASS"
  },
  "Parsing: <https://x/?\u0000y> without base": {
    "status": "PASS"
  },
  "Parsing: <https://x/?#\u0000y> without base": {
    "status": "PASS"
  },
  "Parsing: <https://￿y> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://x/￿y> without base": {
    "status": "PASS"
  },
  "Parsing: <https://x/?￿y> without base": {
    "status": "PASS"
  },
  "Parsing: <https://x/?#￿y> without base": {
    "status": "PASS"
  },
  "Parsing: <non-special:\u0000y> without base": {
    "status": "PASS"
  },
  "Parsing: <non-special:x/\u0000y> without base": {
    "status": "PASS"
  },
  "Parsing: <non-special:x/?\u0000y> without base": {
    "status": "PASS"
  },
  "Parsing: <non-special:x/?#\u0000y> without base": {
    "status": "PASS"
  },
  "Parsing: <non-special:￿y> without base": {
    "status": "PASS"
  },
  "Parsing: <non-special:x/￿y> without base": {
    "status": "PASS"
  },
  "Parsing: <non-special:x/?￿y> without base": {
    "status": "PASS"
  },
  "Parsing: <non-special:x/?#￿y> without base": {
    "status": "PASS"
  },
  "Parsing: <> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://example.com/\"quoted\"> without base": {
    "status": "PASS"
  },
  "Parsing: <https://a%C2%ADb/> without base": {
    "status": "PASS"
  },
  "Parsing: <https://­/> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://%C2%AD/> without base": {
    "status": "FAIL"
  },
  "Parsing: <https://xn--/> without base": {
    "status": "FAIL"
  },
  "Parsing: <data://example.com:8080/pathname?search#hash> without base": {
    "status": "PASS"
  },
  "Parsing: <data:///test> without base": {
    "status": "PASS"
  },
  "Parsing: <data://test/a/../b> without base": {
    "status": "PASS"
  },
  "Parsing: <data://:443> without base": {
    "status": "FAIL"
  },
  "Parsing: <data://test:test> without base": {
    "status": "FAIL"
  },
  "Parsing: <data://[:1]> without base": {
    "status": "FAIL"
  },
  "Parsing: <javascript://example.com:8080/pathname?search#hash> without base": {
    "status": "PASS"
  },
  "Parsing: <javascript:///test> without base": {
    "status": "PASS"
  },
  "Parsing: <javascript://test/a/../b> without base": {
    "status": "PASS"
  },
  "Parsing: <javascript://:443> without base": {
    "status": "FAIL"
  },
  "Parsing: <javascript://test:test> without base": {
    "status": "FAIL"
  },
  "Parsing: <javascript://[:1]> without base": {
    "status": "FAIL"
  },
  "Parsing: <mailto://example.com:8080/pathname?search#hash> without base": {
    "status": "PASS"
  },
  "Parsing: <mailto:///test> without base": {
    "status": "PASS"
  },
  "Parsing: <mailto://test/a/../b> without base": {
    "status": "PASS"
  },
  "Parsing: <mailto://:443> without base": {
    "status": "FAIL"
  },
  "Parsing: <mailto://test:test> without base": {
    "status": "FAIL"
  },
  "Parsing: <mailto://[:1]> without base": {
    "status": "FAIL"
  },
  "Parsing: <intent://example.com:8080/pathname?search#hash> without base": {
    "status": "PASS"
  },
  "Parsing: <intent:///test> without base": {
    "status": "PASS"
  },
  "Parsing: <intent://test/a/../b> without base": {
    "status": "PASS"
  },
  "Parsing: <intent://:443> without base": {
    "status": "FAIL"
  },
  "Parsing: <intent://test:test> without base": {
    "status": "FAIL"
  },
  "Parsing: <intent://[:1]> without base": {
    "status": "FAIL"
  },
  "Parsing: <urn://example.com:8080/pathname?search#hash> without base": {
    "status": "PASS"
  },
  "Parsing: <urn:///test> without base": {
    "status": "PASS"
  },
  "Parsing: <urn://test/a/../b> without base": {
    "status": "PASS"
  },
  "Parsing: <urn://:443> without base": {
    "status": "FAIL"
  },
  "Parsing: <urn://test:test> without base": {
    "status": "FAIL"
  },
  "Parsing: <urn://[:1]> without base": {
    "status": "FAIL"
  },
  "Parsing: <turn://example.com:8080/pathname?search#hash> without base": {
    "status": "PASS"
  },
  "Parsing: <turn:///test> without base": {
    "status": "PASS"
  },
  "Parsing: <turn://test/a/../b> without base": {
    "status": "PASS"
  },
  "Parsing: <turn://:443> without base": {
    "status": "FAIL"
  },
  "Parsing: <turn://test:test> without base": {
    "status": "FAIL"
  },
  "Parsing: <turn://[:1]> without base": {
    "status": "FAIL"
  },
  "Parsing: <stun://example.com:8080/pathname?search#hash> without base": {
    "status": "PASS"
  },
  "Parsing: <stun:///test> without base": {
    "status": "PASS"
  },
  "Parsing: <stun://test/a/../b> without base": {
    "status": "PASS"
  },
  "Parsing: <stun://:443> without base": {
    "status": "FAIL"
  },
  "Parsing: <stun://test:test> without base": {
    "status": "FAIL"
  },
  "Parsing: <stun://[:1]> without base": {
    "status": "FAIL"
  },
  "Parsing: <w://x:0> without base": {
    "status": "PASS"
  },
  "Parsing: <west://x:0> without base": {
    "status": "PASS"
  }
}