{
  "Constructing a Request with a stream holds the original object.": {
    "status": 0
  },
  "Constructing a Request with a stream on which getReader() is called": {
    "status": 1
  },
  "Constructing a Request with a stream on which read() is called": {
    "status": 1
  },
  "Constructing a Request with a stream on which read() and releaseLock() are called": {
    "status": 1
  },
  "Constructing a Request with a Request on which body.getReader() is called": {
    "status": 1
  },
  "Constructing a Request with a Request on which body.getReader().read() is called": {
    "status": 1
  },
  "Constructing a Request with a Request on which read() and releaseLock() are called": {
    "status": 1
  },
  "It is OK to omit .duplex when the body is null.": {
    "status": 0
  },
  "It is OK to omit .duplex when the body is a string.": {
    "status": 0
  },
  "It is OK to omit .duplex when the body is a Uint8Array.": {
    "status": 0
  },
  "It is OK to omit .duplex when the body is a Blob.": {
    "status": 0
  },
  "It is error to omit .duplex when the body is a ReadableStream.": {
    "status": 1
  },
  "It is OK to set .duplex = 'half' when the body is null.": {
    "status": 0
  },
  "It is OK to set .duplex = 'half' when the body is a string.": {
    "status": 0
  },
  "It is OK to set .duplex = 'half' when the body is a Uint8Array.": {
    "status": 0
  },
  "It is OK to set .duplex = 'half' when the body is a Blob.": {
    "status": 0
  },
  "It is OK to set .duplex = 'half' when the body is a ReadableStream.": {
    "status": 0
  },
  "It is error to set .duplex = 'full' when the body is null.": {
    "status": 1
  },
  "It is error to set .duplex = 'full' when the body is a string.": {
    "status": 1
  },
  "It is error to set .duplex = 'full' when the body is a Uint8Array.": {
    "status": 1
  },
  "It is error to set .duplex = 'full' when the body is a Blob.": {
    "status": 1
  },
  "It is error to set .duplex = 'full' when the body is a ReadableStream.": {
    "status": 1
  },
  "It is OK to omit duplex when init.body is not given and input.body is given.": {
    "status": 0
  }
}